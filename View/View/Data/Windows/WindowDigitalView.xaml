<UserControl
    x:Class="View.Data.Windows.WindowDigitalView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Control="clr-namespace:View.Control"
    xmlns:EditableLabel="clr-namespace:CustomElements.EditableLabel;assembly=CustomElements"
    xmlns:SequenceView="clr-namespace:View.Data.Tabs"
    xmlns:TabAddButton="clr-namespace:CustomElements.TabAddButton;assembly=CustomElements"
    xmlns:TabCloseButton="clr-namespace:CustomElements.TabCloseButton;assembly=CustomElements"
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    MinWidth="300"
    MinHeight="800"
    AllowDrop="True">

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CustomElements;component/CustomDictionary.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <SequenceView:IsEnabledToBrushConverter x:Key="IsEnabledConverter" />

            <DataTemplate x:Key="WindowsTemplate">
                <Control:WindowsTemplate />
            </DataTemplate>

            <DataTemplate x:Key="ChannelTemplate">
                <Border
                    x:Name="__BORDER"
                    Height="60"
                    BorderThickness="0">
                    <ItemsControl ItemsSource="{Binding Path=Steps}">
                        <!--  This specifies that the items in the second level items control should be stacked horizontally  -->
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>

                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="MouseDown" SourceObject="{Binding ElementName=__BORDER}">
                            <behaviors:InvokeCommandAction Command="{Binding MouseDownCommand}" PassEventArgsToCommand="True" />
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>

                </Border>
                <DataTemplate.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter TargetName="__BORDER" Property="Background" Value="#77bacdde" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter TargetName="__BORDER" Property="Background" Value="#77CAd5de" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>


    </UserControl.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="28" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <ListBox
                    Name="WindowsListBox"
                    Grid.Row="0"
                    Grid.Column="0"
                    HorizontalContentAlignment="Stretch"
                    BorderBrush="Transparent"
                    IsSynchronizedWithCurrentItem="True"
                    ItemTemplate="{StaticResource WindowsTemplate}"
                    ItemsSource="{Binding WindowsList, UpdateSourceTrigger=PropertyChanged}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <Button
                    Grid.Row="0"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Command="{Binding OpenVisualizeWindowCommand}">
                    Visualize
                </Button>
            </Grid>
            <TabControl
                Name="TabItems"
                Grid.Row="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                IsSynchronizedWithCurrentItem="True"
                ItemsSource="{Binding Path=Tabs}">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}" />
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Background="{Binding IsEnabled, Converter={StaticResource IsEnabledConverter}}" Orientation="Horizontal">
                            <!--<Label Style="{StaticResource EditableLabelStyle}" Height="25" Content="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" Canvas.Left="16" Canvas.Top="6" MouseDoubleClick="Label_MouseDoubleClick_1" LostFocus="Label_LostFocus_1" />-->
                            <!--<EditableLabel:EditableLabel Height="25" Content="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" Canvas.Left="16" Canvas.Top="6" />-->
                            <!--<EditableTextBlock:EditableTextBlock Text="moep"/>-->
                            <CheckBox
                                Margin="2,5,2,0"
                                IsChecked="{Binding IsEnabled}"
                                ToolTip="Indicates whether this sequence is enabled" />
                            <EditableLabel:EditableLabel Content="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBlock Height="15" Text="{Binding Duration}" />
                            <TabAddButton:TabAddButton
                                Name="Add"
                                Height="15"
                                Command="{Binding TabAdd}" />
                            <Button
                                Name="Left"
                                Width="18"
                                Height="18"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Command="{Binding TabLeft}">
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">&lt;</TextBlock>
                            </Button>
                            <Button
                                Name="Right"
                                Width="18"
                                Height="18"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Command="{Binding TabRight}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    TextAlignment="Center">
                                    &gt;
                                </TextBlock>
                            </Button>
                            <TabCloseButton:TabCloseButton Height="15" Command="{Binding TabRemove}" />
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>

                    <DataTemplate>

                        <ItemsControl
                            AlternationCount="2"
                            IsEnabled="{Binding IsEnabled}"
                            ItemTemplate="{StaticResource ChannelTemplate}"
                            ItemsSource="{Binding Path=Channels}">
                            <!--  This specifies that the items in the top level items control should be stacked vertically  -->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel IsItemsHost="True" Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>

                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </Grid>
    </ScrollViewer>
</UserControl>