<Window x:Class="View.Data.Windows.WindowAnalogView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Helper="clr-namespace:View.Helper"
        xmlns:TabAddButton="clr-namespace:CustomElements.TabAddButton;assembly=CustomElements"
        xmlns:TabCloseButton="clr-namespace:CustomElements.TabCloseButton;assembly=CustomElements"
        xmlns:EditableLabel="clr-namespace:CustomElements.EditableLabel;assembly=CustomElements"
        xmlns:StepsController="clr-namespace:Controller.Data.Steps;assembly=Controller"
        xmlns:Control="clr-namespace:View.Control"
        xmlns:StepsView="clr-namespace:View.Data.Steps" xmlns:ChannelsView="clr-namespace:View.Data.Channels"
        xmlns:ChannelsController="clr-namespace:Controller.Data.Channels;assembly=Controller" Title="{Binding Name}"
		xmlns:SequenceController="clr-namespace:Controller.Data.Tabs;assembly=Controller"
        Height="300" Width="300" SizeToContent="WidthAndHeight"
        ShowInTaskbar="False">
    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CustomElements;component/CustomDictionary.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <SequenceController:IsEnabledToBrushConverter x:Key="IsEnabledConverter"/>
            <DataTemplate x:Key="WindowsTemplate">
                <Control:WindowsTemplate />
            </DataTemplate>

            <DataTemplate DataType="{x:Type StepsController:StepRampController}">
                <StepsView:StepAnalogRampView BorderBrush="DarkGray" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type StepsController:StepPythonController}">
                <StepsView:StepPythonView BorderBrush="DarkGray" />
            </DataTemplate>



            <DataTemplate DataType="{x:Type StepsController:StepFileController}">
                <StepsView:StepAnalogFileView BorderBrush="DarkGray" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type ChannelsController:ChannelSettingsController}">
                <ChannelsView:AnalogHeader BorderBrush="DarkGray" />
            </DataTemplate>
            <!--<DataTemplate DataType="{x:Type Analog:AnalogStepBinaryView}">
            <Border BorderThickness="1" BorderBrush="DarkGray" Background="Lavender" Opacity="0.8">
                <Analog1:stepAnalogBinaryUserControl/>
            </Border>
        </DataTemplate>-->

            <DataTemplate x:Key="ChannelTemplate">
                <Border BorderThickness="0" x:Name="__BORDER" Height="80"  MouseDown="AddItem">
                    <ItemsControl ItemsSource="{Binding Path=Steps}">
                        <!--This specifies that the items in the second level items control should be stacked horizontally-->
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>


                    </ItemsControl>
                </Border>
                <DataTemplate.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter TargetName="__BORDER" Property="Background" Value="#77bacdde" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter TargetName="__BORDER" Property="Background" Value="#77CAd5de" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>


    </Window.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="35"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="115*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" >
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ListBox Grid.Row="0" Grid.Column="0" BorderBrush="Transparent" VerticalAlignment="Center"  IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding WindowsList, UpdateSourceTrigger=PropertyChanged}" ItemTemplate="{StaticResource WindowsTemplate}" Name="WindowsListBox" HorizontalContentAlignment="Stretch">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <Button Command="{Binding OpenVisualizeWindowCommand}" Grid.Row="0" Grid.Column="1"  HorizontalAlignment="Left" VerticalAlignment="Center">Visualize</Button>
            </Grid>


            <TabControl Grid.Row="1" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding Path=Tabs}" HorizontalAlignment="Left"
                    Name="TabItems" VerticalAlignment="Top" Grid.RowSpan="2">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}" />
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Background="{Binding IsEnabled, Converter={StaticResource IsEnabledConverter}}">
                            <CheckBox IsChecked="{Binding IsEnabled}" Margin="2,5,2,0" ToolTip="Indicates whether this sequence is enabled"/>
                            <!--<Label Style="{StaticResource EditableLabelStyle}" Height="25"  Canvas.Left="16" Canvas.Top="6" MouseDoubleClick="Label_MouseDoubleClick_1" LostFocus="Label_LostFocus_1" />-->
                            <TextBlock Height="15" Text="{Binding Index}" Margin="2,0,4,0"/>
                            <EditableLabel:EditableLabel Content="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=LostFocus}"/>
                            <TextBlock Height="15" Text="{Binding Duration}"/>
                            <!--<EditableTextBlock:EditableTextBlock Text="LALALA"/>-->
                            <TabAddButton:TabAddButton Name="Add" Height="15" Command="{Binding TabAdd}" />
                            <Button Name="Left" Height="18" Width="18" Command="{Binding TabLeft}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" >
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">&lt;</TextBlock>
                            </Button>
                            <Button Name="Right" Height="18" Width="18" Command="{Binding TabRight}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" >
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center">&gt;</TextBlock>
                            </Button>
                            <TabCloseButton:TabCloseButton Height="15" Command="{Binding TabRemove}" />
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <ItemsControl IsEnabled="{Binding IsEnabled}" ItemsSource="{Binding Path=Channels}" ItemTemplate="{StaticResource ChannelTemplate}"
                                  AlternationCount="2">
                            <!--This specifies that the items in the top level items control should be stacked vertically-->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>

        </Grid>
    </ScrollViewer>
</Window>