<UserControl
    x:Class="View.Main.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="clr-namespace:View.Main"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Name="UC"
    MinWidth="400"
    MinHeight="300"
    mc:Ignorable="d">

    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded" SourceObject="{Binding ElementName=UC}">
            <behaviors:InvokeCommandAction Command="{Binding WindowLoadedCommand}" PassEventArgsToCommand="True" />
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>

    <UserControl.Resources>
        <view:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <CollectionViewSource x:Key="RegularViewWindows" Source="{Binding Path=WindowList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <xctk:BusyIndicator
            Grid.Row="0"
            BusyContent="{Binding UIBlockedMessage}"
            IsBusy="{Binding IsUIBlocked}">
            <DockPanel>
                <Menu Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" DockPanel.Dock="Top">
                    <MenuItem Header="_Model">
                        <MenuItem Command="{Binding NewCommand}" Header="_New" />
                        <MenuItem Command="{Binding SaveCommand}" Header="_Save" />
                        <!--<MenuItem Header="Browse Primary Model" Command="{Binding LoadCommand}"/>-->
                        <Separator />
                        <MenuItem Command="{Binding ShowStepBatchAdderCommand}" Header="Step _Batch-Add" />
                        <MenuItem Command="{Binding ClearAllDurationZeroStepsCommand}" Header="_Clear 0-Duration Time Steps" />
                    </MenuItem>
                    <MenuItem Header="_Profile">
                        <MenuItem Command="{Binding ShowProfilesManagerCommand}" Header="_Manage Profiles" />
                    </MenuItem>
                    <MenuItem Header="_View">
                        <MenuItem.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{Binding Source={StaticResource RegularViewWindows}}" />
                                <Separator />
                                <!--  Look  -->
                                <MenuItem Command="{Binding OpenVisualizeWindowCommand}" Header="Output _Visualizer" />
                                <MenuItem Header="_AdWin-Specific">
                                    <MenuItem Command="{Binding ShowSimulatorCommand}" Header="AdWin _Simulator" />
                                    <MenuItem Command="{Binding ShowFifoDebugWindowCommand}" Header="AdWin FIFOs _Debugger" />
                                </MenuItem>
                                <MenuItem Command="{Binding ShowSwitchWindowCommand}" Header="Show Model _Switches" />
                                <MenuItem Command="{Binding ShowOptionsManagerCommand}" Header="_Options" />
                            </CompositeCollection>
                        </MenuItem.ItemsSource>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding SelectWindow}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="_Help">
                        <MenuItem Command="{Binding ShowAboutBoxCommand}" Header="_About" />
                    </MenuItem>
                </Menu>
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="41*" />
                        <ColumnDefinition Width="15*" />
                        <ColumnDefinition Width="63*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--
					<RadioButton Content="Simple Sequence" Command="{Binding SimpleSequenceSelectedCommand}" CommandParameter="Simple"  IsChecked="True" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" />
					<RadioButton Content="Measurement Routine" Command="{Binding SimpleSequenceSelectedCommand}" CommandParameter="Routine"  Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" />
					-->

                    <ContentControl
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Content="{Binding CurrentModeController}" />

                    <Grid Grid.Row="0" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>

                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0,0,2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="Duration of Cycle (s):" />
                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="2,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Text="{Binding Duration, Mode=OneWay}" />



                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="0,0,2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="Time of Clicking 'Start':" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="2,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Text="{Binding StartTime, Mode=OneWay}" />


                        <TextBlock
                            Grid.Row="2"
                            Grid.Column="0"
                            Margin="0,0,2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="End Time of Current Scan:" />
                        <TextBlock
                            Grid.Row="2"
                            Grid.Column="1"
                            Margin="2,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Text="{Binding EndTime, Mode=OneWay}" />

                        <TextBlock
                            Grid.Row="3"
                            Grid.Column="0"
                            Margin="0,0,2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            IsEnabled="{Binding IsIterateAndSaveChecked}"
                            Text="Duration of Scan (h:m):" />
                        <TextBlock
                            Grid.Row="3"
                            Grid.Column="1"
                            Margin="2,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            IsEnabled="{Binding IsIterateAndSaveChecked}"
                            Text="{Binding DurationTotal, Mode=OneWay}" />

                        <TextBlock
                            Grid.Row="4"
                            Grid.Column="0"
                            Margin="0,0,2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">
                            <Bold>Global Counter:</Bold>
                        </TextBlock>
                        <TextBlock
                            Name="globalCount"
                            Grid.Row="4"
                            Grid.Column="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Text="{Binding GlobalCounter, Mode=OneWay}" />

                    </Grid>


                    <CheckBox
                        x:Name="ControlLecroyCheckBox"
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="2,5,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Content="Control LeCroy"
                        IsChecked="{Binding ControlLecroy}"
                        IsEnabled="{Binding IsControlLecroyPossible}" />
                    <CheckBox
                        Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Margin="2,5,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Stretch"
                        Content="Always Increase GC"
                        IsChecked="{Binding AlwaysIncrease}"
                        IsEnabled="{Binding IsAlwaysIncreaseEnabled}" />
                    <CheckBox
                        Grid.Row="3"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Stretch"
                        Margin="2,5,0,0"
                        Content="Pause Increasing GC"
                        IsChecked="{Binding Pause}"
                        IsEnabled="{Binding IsPauseEnabled}" /> 
                    <CheckBox
                        Name="IterateAndSaveButton"
                        Grid.Row="4"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Margin="2,5,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Command="{Binding IterateAndSaveCommand}"
                        Content="Increment Iterators"
                        IsChecked="{Binding IsIterateAndSaveChecked, Mode=OneWay}"
                        IsEnabled="{Binding IncrementIteratorsIsEnabled, Mode=TwoWay}" />

                    <ContentControl
                        Grid.Row="5"
                        Grid.Column="0"
                        Grid.ColumnSpan="4"
                        Content="{Binding IterationManagerController}"
                        Visibility="{Binding IsIterateAndSaveChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
            </DockPanel>
        </xctk:BusyIndicator>
        <StatusBar
            Name="statusBar"
            Grid.Row="1"
            Height="25"
            Margin="0,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Stretch">
            <StatusBarItem>
                <TextBlock>Generator:</TextBlock>
            </StatusBarItem>
            <ProgressBar
                Name="GeneratorProgressBar"
                Width="10"
                Height="10"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Foreground="{Binding GeneratorStateColor}"
                Value="100" />
            <StatusBarItem>
                <TextBlock
                    Name="GeneratorStateTextBlock"
                    Width="120"
                    Text="{Binding GeneratorState}" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock>Output:</TextBlock>
            </StatusBarItem>
            <ProgressBar
                Name="OutputProgressBar"
                Width="10"
                Height="10"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Foreground="{Binding OutputCycleColor}"
                Value="100" />
            <StatusBarItem>
                <TextBlock Name="OutputStateTextBlock" Text="{Binding OutputCycleState}" />
            </StatusBarItem>
            <!--            <StatusBarItem HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch">
                <TextBlock Name="bufferStatus" Height="19" HorizontalAlignment="Stretch" Text="{Binding bufferStatus}"></TextBlock>
            </StatusBarItem>-->
            <!--<Separator Width="3" />
        <StatusBarItem Width="180" HorizontalContentAlignment="Stretch" HorizontalAlignment="Left">
            <TextBlock Name="guiStatus" HorizontalAlignment="Stretch" Height="19">GuiStatus</TextBlock>
        </StatusBarItem>-->
        </StatusBar>
    </Grid>
</UserControl>
