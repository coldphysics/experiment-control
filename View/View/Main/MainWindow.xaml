<Window x:Class="View.Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:vm="clr-namespace:Controller.Settings;assembly=Controller"
		xmlns:Control="clr-namespace:View.Control"
		xmlns:local="clr-namespace:Controller.MainWindow;assembly=Controller"
		xmlns:mr="clr-namespace:Controller.MainWindow.MeasurementRoutine;assembly=Controller"
		xmlns:view="clr-namespace:View.Main"
		xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		mc:Ignorable="d"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		
	 	d:DataContext="{d:DesignInstance local:MainWindowController, IsDesignTimeCreatable=True}"
		Icon="{Binding Icon}"
        Title="Experiment Control" Height="750" Width="800"  MinWidth="400" MinHeight="300" SizeToContent="WidthAndHeight" Closing="ShutdownApplication" Loaded="Window_Loaded">
    <Window.Resources>

        <DataTemplate DataType="{x:Type local:IterationManagerController}">
            <view:IterationManagerView  />
        </DataTemplate>

        <DataTemplate DataType="{x:Type mr:MeasurementRoutineManagerController}">
            <view:MeasurementRoutineManagerView  />
        </DataTemplate>


        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <CollectionViewSource  Source="{Binding Path=WindowList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }" x:Key="RegularViewWindows" />

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <xctk:BusyIndicator Grid.Row="0" IsBusy="{Binding IsUIBlocked}" BusyContent="{Binding UIBlockedMessage}">
            <DockPanel >
                <Menu DockPanel.Dock="Top" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}">
                    <MenuItem Header="_Model">
                        <MenuItem Header="_New" Command="{Binding NewCommand}"/>
                        <MenuItem Header="_Save" Command="{Binding SaveCommand}"/>
                        <!--<MenuItem Header="Browse Primary Model" Command="{Binding LoadCommand}"/>-->
                        <Separator/>
                        <MenuItem Header="Step _Batch-Add" Command="{Binding ShowStepBatchAdderCommand}" />
                        <MenuItem Header="_Clear 0-Duration Time Steps" Command="{Binding ClearAllDurationZeroStepsCommand}"/>
                    </MenuItem>
                    <MenuItem Header="_Profile">
                        <MenuItem Header="_Manage Profiles" Command="{Binding ShowProfilesManagerCommand}"/>
                    </MenuItem>
                    <MenuItem Header="_View" >
                        <MenuItem.ItemsSource>
                            <CompositeCollection >
                                <CollectionContainer  Collection="{Binding Source={StaticResource RegularViewWindows}}" />

                                <Separator/>
                                <!--Look -->
                                <MenuItem Header="Output _Visualizer" Command="{Binding OpenVisualizeWindowCommand}"/>

                                <MenuItem Header="_AdWin-Specific">
                                    <MenuItem Header="AdWin _Simulator" Command="{Binding ShowSimulatorCommand}"/>
                                    <MenuItem Header="AdWin FIFOs _Debugger" Command="{Binding ShowFifoDebugWindowCommand}"/>
                                </MenuItem>
                                <MenuItem Header="_Switch Window" Command="{Binding ShowSwitchWindowCommand}"/>
                                <MenuItem Header="_Options" Command="{Binding ShowOptionsManagerCommand}"/>
                            </CompositeCollection>
                        </MenuItem.ItemsSource>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command"	Value="{Binding SelectWindow}"/>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="_Help">
                        <MenuItem Header="_About" Command="{Binding ShowAboutBoxCommand}"/>
                    </MenuItem>
                </Menu>
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--
					<RadioButton Content="Simple Sequence" Command="{Binding SimpleSequenceSelectedCommand}" CommandParameter="Simple"  IsChecked="True" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" />
					<RadioButton Content="Measurement Routine" Command="{Binding SimpleSequenceSelectedCommand}" CommandParameter="Routine"  Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" />
					-->

                    <ContentControl Grid.Row="0" Grid.Column="0" Content="{Binding CurrentModeController}"/>

                    <Grid Grid.Row="0" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="Duration of Cycle (s):" Margin="0,0,2,0" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right"
               VerticalAlignment="Center" />
                        <TextBlock Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Text="{Binding Duration, Mode=OneWay}"
                   VerticalAlignment="Center" Margin="2,0,0,0"/>



                        <TextBlock Text="Time of Clicking 'Start':" Margin="0,0,2,0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right"
               VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Grid.Row="1" Margin="2,0,0,0" HorizontalAlignment="Left" Text="{Binding StartTime, Mode=OneWay}"
                   VerticalAlignment="Center" />


                        <TextBlock Text="End Time of Current Scan:" Margin="0,0,2,0" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Right"
               VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Grid.Row="2" Margin="2,0,0,0" HorizontalAlignment="Left" Text="{Binding EndTime, Mode=OneWay}"
                   VerticalAlignment="Center" />

                        <TextBlock Text="Duration of Scan (h:m):" Margin="0,0,2,0" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right"
               VerticalAlignment="Center" IsEnabled="{Binding IsIterateAndSaveChecked}"/>
                        <TextBlock Grid.Column="1" Grid.Row="3" Margin="2,0,0,0" HorizontalAlignment="Left" Text="{Binding DurationTotal, Mode=OneWay}"
                   VerticalAlignment="Center" IsEnabled="{Binding IsIterateAndSaveChecked}"/>

                        <TextBlock  Margin="0,0,2,0" Grid.Row="4" Grid.Column="0" HorizontalAlignment="Right" 
               VerticalAlignment="Top">
						<Bold>Global Counter:</Bold>
                        </TextBlock>
                        <TextBlock  Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left"  Name="globalCount" Text="{Binding GlobalCounter, Mode=OneWay}"
                   VerticalAlignment="Top"/>

                    </Grid>


                    <CheckBox Content="Control LeCroy"  Margin="2,5,0,0" Grid.Row="1" HorizontalAlignment="Left" Grid.Column="0" Grid.ColumnSpan="2" IsEnabled="{Binding IsControlLecroyPossible}"
                    	x:Name="ControlLecroyCheckBox"  VerticalAlignment="Top"  IsChecked="{Binding ControlLecroy}"  />

                    <CheckBox Content="Increment Iterators" Margin="2,5,0,0" Grid.Row="2"  Grid.Column="0" Grid.ColumnSpan="2 " HorizontalAlignment="Left"  
                  Name="IterateAndSaveButton" VerticalAlignment="Top" Command="{Binding IterateAndSaveCommand}" IsChecked="{Binding IsIterateAndSaveChecked, Mode=OneWay}" IsEnabled="{Binding IncrementIteratorsIsEnabled, Mode=TwoWay}"/>

                    <ContentControl Grid.Row="3" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3" Content="{Binding IterationManagerController}" Visibility="{Binding IsIterateAndSaveChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
            </DockPanel>
        </xctk:BusyIndicator>
        <StatusBar Grid.Row="1" Height="25" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="0,0,0,0" Name="statusBar"
                   VerticalAlignment="Top">
            <StatusBarItem>
                <TextBlock>Generator:</TextBlock>
            </StatusBarItem>
            <ProgressBar Name="GeneratorProgressBar" Foreground="{Binding GeneratorStateColor}" Value="100" HorizontalAlignment="Left" Height="10" VerticalAlignment="Top" Width="10"/>
            <StatusBarItem>
                <TextBlock Width="120" Text="{Binding GeneratorState}" Name="GeneratorStateTextBlock"></TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock>Output:</TextBlock>
            </StatusBarItem>
            <ProgressBar Name="OutputProgressBar" Foreground="{Binding OutputCycleColor}" Value="100" HorizontalAlignment="Left" Height="10" VerticalAlignment="Top" Width="10"/>
            <StatusBarItem>
                <TextBlock Text="{Binding OutputCycleState}" Name="OutputStateTextBlock"></TextBlock>
            </StatusBarItem>
            <!--            <StatusBarItem HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch">
                <TextBlock Name="bufferStatus" Height="19" HorizontalAlignment="Stretch" Text="{Binding bufferStatus}"></TextBlock>
            </StatusBarItem>-->
            <!--<Separator Width="3" />
        <StatusBarItem Width="180" HorizontalContentAlignment="Stretch" HorizontalAlignment="Left">
            <TextBlock Name="guiStatus" HorizontalAlignment="Stretch" Height="19">GuiStatus</TextBlock>
        </StatusBarItem>-->
        </StatusBar>
    </Grid>
</Window>
